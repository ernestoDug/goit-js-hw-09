{"mappings":"oeAaA,IAAAA,EAAAC,EAAA,SAkBW,MAAHC,EAAWC,SAASC,cAAc,SAE3BF,EAAJG,iBAAiB,UAEX,SAAGC,GAGOA,EAAjBC,iBAEkB,MAAtBC,EAAQC,OAAOP,EAASM,MAAME,OAC9BC,EAAST,EAASS,OAAOD,MACzBE,EAAOH,OAAOP,EAASU,KAAKF,OAErB,IAAR,IAAIG,EAAI,EAAGA,EAAIF,EAAQE,IAEQC,YAAvB,KA9BM,IAAIC,EAAUC,EAAVD,EAgCLF,EAAE,EAhCaG,EAgCTR,EAAQI,EAAKC,EA/BbI,KAAKC,SAAW,GAEpCC,QAAQC,QAAQ,CAAEC,SAAAN,EAAUP,MAAAQ,IAASM,MAAK,EAACD,SAAEA,EAAQb,MAAEA,MAAeR,EAAAuB,OAAOC,QAAQ,uBAAqBH,QAAiBb,MAAU,IAMrIW,QAAQM,OAAO,CAAEJ,SAAAN,EAAUP,MAAAQ,IAASU,OAAO,EAACL,SAAEA,EAAQb,MAAEA,MACrDR,EAAAuB,OAAOI,QAAQ,sBAAoBN,QAAiBb,MAAU,GAsB5B,GACpCA,EAAQI,EAAKC,GAKdP,EAAMsB,cAAcC,O","sources":["src/js/03-promises.js"],"sourcesContent":["\n// Напиши скрипт, який на момент сабміту форми викликає функцію createPromise(position, delay) \n// стільки разів, скільки ввели в поле amount.\n\n// Під час кожного виклику передай їй номер промісу (position), \n// що створюється, і затримку, враховуючи першу затримку (delay), введену користувачем, і крок (step).\n\n// Доповни код функції createPromise таким чином, щоб вона повертала один проміс, який виконується\n//  або відхиляється через delay часу. \n\n//  Значенням промісу повинен бути об'єкт, в якому будуть властивості position і delay зі значеннями однойменних параметрів. \n\n// / notiflix модуль попередження та сповіщення\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n//  наша фабрика промісів\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    Promise.resolve({ position, delay }).then(({ position, delay }) => {( Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`));\n  })\n  }\n    // Fulfill\n    else {\n    // Reject\n    Promise.reject({ position, delay }).catch (({ position, delay }) =>\n    { (Notify.warning(`❌ Rejected promise ${position} in ${delay}ms`));\n      });\n  }\n}\n  // посилання\n  const formCons = document.querySelector(\".form\");\n  // слухач сабміту\n  formCons.addEventListener(\"submit\", subMiter);\n  // обробник сабміту\n  function subMiter(event)\n  {\n    // скидаємо автонооновлення\n    event.preventDefault();\n// знімаємо показники з полів форми\nconst delay = Number(formCons.delay.value);\nconst amount = formCons.amount.value;\nconst step = Number(formCons.step.value);\n// гоняємо циклом \nfor (let i = 0; i < amount; i++) {\n// асинхронимо згідно з волею користувача\n  setTimeout(() => {\n    // викликаємо фабрику промісів враховуя затримку та крок \n    createPromise(i+1, (delay + step*i) )\n  }, delay + step*i );\n}\n{\n}\n// оновлюємо поля форми  \n    event.currentTarget.reset();\n\n}  \n\n\n\n\n\n\n\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$formCons","document","querySelector","addEventListener","event","preventDefault","delay","Number","value","amount","step","i","setTimeout","position1","delay1","Math","random","Promise","resolve","position","then","Notify","success","reject","catch","warning","currentTarget","reset"],"version":3,"file":"03-promises.3928ba88.js.map"}