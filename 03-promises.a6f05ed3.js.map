{"mappings":"gfASA,IAAAA,EAAAC,EAAA,SAmBS,IAAHC,EAAWC,SAASC,cAAc,SAE3BF,EAAJG,iBAAiB,UAEX,SAAGC,G,kBAUoBC,YAAvB,YA9BI,SAAIC,EAAUC,GACTC,KAAKC,SAAW,GAGpCC,QAAQC,QAAQ,CAAEL,WAAUC,UAASK,MAAK,SAAAC,G,IAAGC,EAAQD,EAARP,SAAUS,EAAKF,EAALN,MACrDT,EAAAkB,OAAOC,QAAQ,uBAAwCC,OAAfJ,EAAS,QAAYI,OAANH,EAAM,M,IAK/DL,QAAQS,OAAO,CAAEb,WAAUC,UAASa,OAAM,SAAAP,G,IAAGC,EAAQD,EAARP,SAAUS,EAAKF,EAALN,MACrDT,EAAAkB,OAAOK,QAAQ,sBAAuCH,OAAfJ,EAAS,QAAYI,OAANH,EAAM,M,IAqBbO,CAAjCC,EAAI,EAAGhB,EAAQiB,EAAOD,E,GACnChB,EAAQiB,EAAOD,E,EAXpBnB,EAAMqB,iBAMN,IAJA,IAAMlB,EAAQmB,OAAO1B,EAASO,MAAMoB,OAC9BC,EAAS5B,EAAS4B,OAAOD,MACzBH,EAAOE,OAAO1B,EAASwB,KAAKG,OAEzBE,EAAI,EAAGA,EAAID,EAAQC,IAAGC,EAAAD,GAU/BzB,EAAM2B,cAAcC,O","sources":["src/js/03-promises.js"],"sourcesContent":["// Напиши скрипт, який на момент сабміту форми викликає функцію createPromise(position, delay)\n// стільки разів, скільки ввели в поле amount.\n// Під час кожного виклику передай їй номер промісу (position),\n// що створюється, і затримку, враховуючи першу затримку (delay), введену користувачем, і крок (step).\n// Доповни код функції createPromise таким чином, щоб вона повертала один проміс, який виконується\n//  або відхиляється через delay часу.\n//  Значенням промісу повинен бути об'єкт, в якому будуть властивості position і delay зі значеннями однойменних параметрів.\n\n// / notiflix модуль попередження та сповіщення\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n//  наша фабрика промісів\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n    Promise.resolve({ position, delay }).then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    });\n  }\n  else {\n    // Reject\n    Promise.reject({ position, delay }).catch(({ position, delay }) => {\n      Notify.warning(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n  }\n}\n// посилання\nconst formCons = document.querySelector('.form');\n// слухач сабміту\nformCons.addEventListener('submit', subMiter);\n// обробник сабміту\nfunction subMiter(event) {\n  // скидаємо автонооновлення\n  event.preventDefault();\n  // региструю  показники з полів форми\n  const delay = Number(formCons.delay.value);\n  const amount = formCons.amount.value;\n  const step = Number(formCons.step.value);\n  // гоняю циклом\n  for (let i = 0; i < amount; i++) {\n    // асинхронимо згідно з волею користувача\n    setTimeout(() => {\n      // викликаємо фабрику промісів враховуя затримку та крок\n      createPromise(i + 1, delay + step * i);\n    }, delay + step * i);\n  }\n  {\n  }\n  // оновлюємо поля форми\n  event.currentTarget.reset();\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formCons","document","querySelector","addEventListener","event","setTimeout","position","delay","Math","random","Promise","resolve","then","param","_$position","_$delay","Notify","success","concat","reject","catch","warning","$ce04d3a99e08e73b$var$createPromise","i","step","preventDefault","Number","value","amount","i1","_loop","currentTarget","reset"],"version":3,"file":"03-promises.a6f05ed3.js.map"}