{"mappings":"gfAaA,IAAAA,EAAAC,EAAA,SAkBW,IAAHC,EAAWC,SAASC,cAAc,SAE3BF,EAAJG,iBAAiB,UAEX,SAAGC,G,kBAWgBC,YAAvB,YA9BM,SAAIC,EAAUC,GACTC,KAAKC,SAAW,GAEpCC,QAAQC,QAAQ,CAAEL,WAAUC,UAASK,MAAK,SAAAC,G,IAAGC,EAAQD,EAARP,SAAUS,EAAKF,EAALN,MAAeT,EAAAkB,OAAOC,QAAQ,uBAAwCC,OAAfJ,EAAS,QAAYI,OAANH,EAAM,M,IAMnIL,QAAQS,OAAO,CAAEb,WAAUC,UAASa,OAAO,SAAAP,G,IAAGC,EAAQD,EAARP,SAAUS,EAAKF,EAALN,MACrDT,EAAAkB,OAAOK,QAAQ,sBAAuCH,OAAfJ,EAAS,QAAYI,OAANH,EAAM,M,IAsBhBO,CAAjCC,EAAE,EAAIhB,EAAQiB,EAAKD,E,GAChChB,EAAQiB,EAAKD,E,EAXdnB,EAAMqB,iBAMV,IAJA,IAAMlB,EAAQmB,OAAO1B,EAASO,MAAMoB,OAC9BC,EAAS5B,EAAS4B,OAAOD,MACzBH,EAAOE,OAAO1B,EAASwB,KAAKG,OAEzBE,EAAI,EAAGA,EAAID,EAAQC,IAAGC,EAAAD,GAU3BzB,EAAM2B,cAAcC,O","sources":["src/js/03-promises.js"],"sourcesContent":["\n// Напиши скрипт, який на момент сабміту форми викликає функцію createPromise(position, delay) \n// стільки разів, скільки ввели в поле amount.\n\n// Під час кожного виклику передай їй номер промісу (position), \n// що створюється, і затримку, враховуючи першу затримку (delay), введену користувачем, і крок (step).\n\n// Доповни код функції createPromise таким чином, щоб вона повертала один проміс, який виконується\n//  або відхиляється через delay часу. \n\n//  Значенням промісу повинен бути об'єкт, в якому будуть властивості position і delay зі значеннями однойменних параметрів. \n\n// / notiflix модуль попередження та сповіщення\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n//  наша фабрика промісів\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    Promise.resolve({ position, delay }).then(({ position, delay }) => {( Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`));\n  })\n  }\n    // Fulfill\n    else {\n    // Reject\n    Promise.reject({ position, delay }).catch (({ position, delay }) =>\n    { (Notify.warning(`❌ Rejected promise ${position} in ${delay}ms`));\n      });\n  }\n}\n  // посилання\n  const formCons = document.querySelector(\".form\");\n  // слухач сабміту\n  formCons.addEventListener(\"submit\", subMiter);\n  // обробник сабміту\n  function subMiter(event)\n  {\n    // скидаємо автонооновлення\n    event.preventDefault();\n// знімаємо показники з полів форми\nconst delay = Number(formCons.delay.value);\nconst amount = formCons.amount.value;\nconst step = Number(formCons.step.value);\n// гоняємо циклом \nfor (let i = 0; i < amount; i++) {\n// асинхронимо згідно з волею користувача\n  setTimeout(() => {\n    // викликаємо фабрику промісів враховуя затримку та крок \n    createPromise(i+1, (delay + step*i) )\n  }, delay + step*i );\n}\n{\n}\n// оновлюємо поля форми  \n    event.currentTarget.reset();\n\n}  \n\n\n\n\n\n\n\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formCons","document","querySelector","addEventListener","event","setTimeout","position","delay","Math","random","Promise","resolve","then","param","_$position","_$delay","Notify","success","concat","reject","catch","warning","$ce04d3a99e08e73b$var$createPromise","i","step","preventDefault","Number","value","amount","i1","_loop","currentTarget","reset"],"version":3,"file":"03-promises.a6f05ed3.js.map"}